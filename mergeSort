
import java.util.Scanner;

//O(nlogn) ---> logn to divide and n to conquer
public class mergeSort {

    public static int[] sort(int arr[], int start, int end) {
        if (start == end - 1)
            return arr;
        end = end - start;
        start = 0;
        int mid = (start + end) / 2;
        int arr1[] = new int[mid];
        int arr2[] = new int[end - mid];
        for (int i = 0; i < mid; i++)
            arr1[i] = arr[i];
        for (int i = 0; i < end - mid; i++)
            arr2[i] = arr[mid + i];
        arr1 = sort(arr1, start, mid);
        arr2 = sort(arr2, mid, end);
        int a[] = new int[end - start];
        int i = 0;
        int j = 0;
        int count = 0;
        while (i < arr1.length && j < arr2.length) {
            if (arr1[i] < arr2[j]) {
                a[count++] = arr1[i++];
            } else {
                a[count++] = arr2[j++];
            }
        }
        if (i == arr1.length) {
            while (j < arr2.length) {
                a[count++] = arr2[j++];
            }
        }
        if (j == arr2.length) {
            while (i < arr1.length) {
                a[count++] = arr1[i++];
            }
        }
        return a;
    }

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        System.out.println("enter size");
        int n = sc.nextInt();
        int numbers[] = new int[n];
        System.out.println("enter " + n + " numbers");
        for (int i = 0; i < n; i++) {
            numbers[i] = sc.nextInt();
        }
        int array[] = sort(numbers, 0, numbers.length);
        System.out.println("ascending order:");
        for (int i = 0; i < n; i++)
            System.out.print(array[i] + " ");
    }
}
